user nginx;
worker_processes auto;


events {
    worker_connections 1024;
    use epoll;
}

http {
    server_tokens off;
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    sendfile on;

    client_max_body_size 100M;

    proxy_connect_timeout 15;
    proxy_send_timeout 300;
    proxy_read_timeout 300;

    limit_req_zone $binary_remote_addr zone=req_limit_per_ip:10m rate=5r/s;
    limit_conn_zone $binary_remote_addr zone=conn_limit_per_ip:10m;
    limit_conn_status 429;
    limit_req_status 429;

    map $request_uri $loggable {
        ~/static  0;
        ~/favicon.ico  0;
        default 1;
    }

    server {
         listen 80;
         server_name marka-service.ru www.marka-service.ru;

         # Redirect all HTTP requests to HTTPS
         #if ($remote_addr != 81.200.149.115) {
          #   return 301 https://$host$request_uri;
         #}
         return 301 https://$host$request_uri;
    }
    server {
        server_name marka-service.ru www.marka-service.ru;
        listen [::]:443 ssl;
        listen 443 ssl;

        ssl_protocols TLSv1.2 TLSv1.3;
        ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
        ssl_prefer_server_ciphers on;
        ssl_stapling on;
        ssl_stapling_verify on;
        ssl_trusted_certificate /etc/ssl/certs/bundle.crt;
        resolver 8.8.8.8 1.1.1.1 valid=300s;
        resolver_timeout 5s;

        ssl_certificate /etc/ssl/certs/bundle.crt;
        ssl_certificate_key /etc/ssl/private/default.key;
        access_log /var/log/nginx/access.log combined if=$loggable;

        location @flask_app {
            proxy_pass http://flask_app:5005;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $host;
            proxy_redirect off;

        }

        location ^~ /static/ {
            alias /app/static/;
            try_files $uri =404;
            # expires 1d;
            # add_header Cache-Control "public";
            log_not_found off;
        }

        location @maintenance {
            root /usr/share/nginx/html;
            try_files $uri /maintenance.html =404;
        }

        location = /429.html {
            root /usr/share/nginx/html;
            add_header Retry-After: 5;
            internal;
            log_not_found off;
        }

        location / {
            if (-f app/maintenance/maintenance.flag) {
                return 503;
            }
            limit_req zone=req_limit_per_ip burst=5 nodelay;
            limit_conn conn_limit_per_ip 10;
            try_files $uri $uri/ @flask_app;
        }

        error_page 404 /404.html;
        error_page 503 @maintenance;
        error_page 500 502 504 /50x.html;
        error_page 429 /429.html;
    }

}